# -*- mode: sh -*-

GO(poprc-push-startle) {
  BLOCK({{
    cd ~/src/startle
    git config receive.denyCurrentBranch warn
    cd ~/src/poprc
    git subtree push --prefix=startle ~/src/startle master
  }})
}

POPRC_HOME=~/src/poprc
GO(popr) (
    cd ${POPRC_HOME}
    if [ ! -f eval ]; then
        make eval
    fi
    ./eval -lo *.ppr -im $@
)

GO(quick-git) {
    if git rev-parse --git-dir &> /dev/null
    then
        git status
        git log
    else
        git init
        git add $@
        git commit -m "initial commit"
    fi
}

GO(emacs) {
    emacsclient -c -a '' $@
}

# src dst NAME=VAL ...
GO(scaffold) (
    shopt -s globstar nullglob
    SRC=$1
    DST=$2
    shift 2
    echo "# scaffold: ${SRC} -> ${DST}, $@" > run-scaffold.sh
    DEFINES=""
    for d in $@; do
        DEFINES="${DEFINES} -D$d"
    done
    pushd ${SRC} > /dev/null
    FILES=( **/*.m4 )
    popd > /dev/null
    for f in "${FILES[@]}"; do
        OUT=`echo "$f" | sed 's/\.m4$//' | m4 ${DEFINES} -`
        echo "mkdir -p $(dirname ${DST}/${OUT})" >> run-scaffold.sh
        echo "m4 ${DEFINES} ${SRC}/$f > ${DST}/${OUT}" >> run-scaffold.sh
    done
    cat run-scaffold.sh
    read -p "Run it? (y/N) " RESPONSE
    RESPONSE=${RESPONSE,,} # tolower
    if [[ "${RESPONSE}" =~ ^(yes|y)$ ]]; then
        echo "running run-scaffold.sh"
        bash run-scaffold.sh
    fi
)
